初始化git:
	$ git config --global user.name "<用户名>"
	$ git config --global user.email "<电子邮件>"
	$ git config --global color.ui auto
开始玩git:
	$ mkdir <仓库名>
	$ cd <仓库名>
	$ git init
	$ git add <文件名>
	$ git commit -m "提交说明"
	$ git status
	$ git log
	$ git relog
	$ git reset --hard commit_id
	$ git diff 		#是工作区(work dict)和暂存区(stage)的比较
	$ git diff --cached     #是暂存区(stage)和分支(master)的比较
	$ git checkout -- readme.txt
	命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：

	一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；

	一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。

	总之，就是让这个文件回到最近一次git commit或git add时的状态。
注意以下几点:
	你可以为Git命令设定别名。例如：把「checkout」缩略为「co」，然后就使用「co」来执行命令。
	$ git config --global alias.co checkout
	按照以下步骤把新创建的tutorial目录设置到Git数据库。
	指定参数「.」，可以把所有的文件加入到索引。
	$ git add .
	HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。

	穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。

	要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。


